//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataSender.Requester {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Vanct.vn/SOAP/Report", ConfigurationName="Requester.Vanct")]
    public interface Vanct {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vanct.vn/SOAP/Report/Vanct/SyncData", ReplyAction="http://Vanct.vn/SOAP/Report/Vanct/SyncDataResponse")]
        void SyncData(string key, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vanct.vn/SOAP/Report/Vanct/SyncData", ReplyAction="http://Vanct.vn/SOAP/Report/Vanct/SyncDataResponse")]
        System.Threading.Tasks.Task SyncDataAsync(string key, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vanct.vn/SOAP/Report/Vanct/CheckOnlineStatus", ReplyAction="http://Vanct.vn/SOAP/Report/Vanct/CheckOnlineStatusResponse")]
        bool CheckOnlineStatus(string key, bool removeIfOffline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vanct.vn/SOAP/Report/Vanct/CheckOnlineStatus", ReplyAction="http://Vanct.vn/SOAP/Report/Vanct/CheckOnlineStatusResponse")]
        System.Threading.Tasks.Task<bool> CheckOnlineStatusAsync(string key, bool removeIfOffline);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vanct.vn/SOAP/Report/Vanct/SyncDailyData", ReplyAction="http://Vanct.vn/SOAP/Report/Vanct/SyncDailyDataResponse")]
        void SyncDailyData(string key, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Vanct.vn/SOAP/Report/Vanct/SyncDailyData", ReplyAction="http://Vanct.vn/SOAP/Report/Vanct/SyncDailyDataResponse")]
        System.Threading.Tasks.Task SyncDailyDataAsync(string key, string data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface VanctChannel : DataSender.Requester.Vanct, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VanctClient : System.ServiceModel.ClientBase<DataSender.Requester.Vanct>, DataSender.Requester.Vanct {
        
        public VanctClient() {
        }
        
        public VanctClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VanctClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VanctClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VanctClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SyncData(string key, string data) {
            base.Channel.SyncData(key, data);
        }
        
        public System.Threading.Tasks.Task SyncDataAsync(string key, string data) {
            return base.Channel.SyncDataAsync(key, data);
        }
        
        public bool CheckOnlineStatus(string key, bool removeIfOffline) {
            return base.Channel.CheckOnlineStatus(key, removeIfOffline);
        }
        
        public System.Threading.Tasks.Task<bool> CheckOnlineStatusAsync(string key, bool removeIfOffline) {
            return base.Channel.CheckOnlineStatusAsync(key, removeIfOffline);
        }
        
        public void SyncDailyData(string key, string data) {
            base.Channel.SyncDailyData(key, data);
        }
        
        public System.Threading.Tasks.Task SyncDailyDataAsync(string key, string data) {
            return base.Channel.SyncDailyDataAsync(key, data);
        }
    }
}
